use game::NUM_TILE_COLORS;

pub const NUM_POSSIBLE_FACTORY_PERMUTATIONS: usize = 71; // 70 + 1 for the empty factory

#[rustfmt::skip]
const FACTORY_HASH_TO_INDEX: [usize; 100] = [42, 32, 67, 48, 20, 0, 0, 65, 27, 6, 25, 21, 43, 0, 0, 35, 0, 51, 0, 0, 17, 0, 56, 28, 14, 41, 8, 44, 54, 36, 0, 52, 0, 37, 29, 55, 26, 13, 63, 15, 0, 0, 0, 66, 47, 18, 30, 38, 0, 59, 69, 12, 0, 61, 1, 46, 53, 0, 0, 9, 0, 0, 0, 62, 7, 50, 5, 4, 33, 68, 31, 0, 0, 0, 10, 40, 22, 2, 57, 45, 23, 11, 24, 39, 34, 19, 49, 0, 0, 58, 3, 16, 0, 0, 64, 0, 0, 0, 0, 60];

pub fn hash_factory(factory: &[u8; NUM_TILE_COLORS]) -> usize {
    if *factory == [0; NUM_TILE_COLORS] {
        70
    } else {
        FACTORY_HASH_TO_INDEX[((factory[0].wrapping_mul(9) as u64
            + factory[1].rotate_left(7).wrapping_mul(54) as u64
            + ((factory[4].wrapping_mul(191) ^ 4).wrapping_add(234)) as u64
            + (factory[2] ^ 15) as u64
            + factory[3] as u64)
            % 113) as usize]
    }
}

#[rustfmt::skip]
const INDEX_TO_FACTORY: [[u8; NUM_TILE_COLORS]; NUM_POSSIBLE_FACTORY_PERMUTATIONS] = [[0, 1, 0, 3, 0], [3, 1, 0, 0, 0], [1, 1, 0, 1, 1], [1, 3, 0, 0, 0], [0, 1, 1, 1, 1], [0, 0, 2, 1, 1], [0, 2, 0, 1, 1], [0, 0, 3, 0, 1], [0, 1, 2, 1, 0], [1, 0, 0, 0, 3], [1, 0, 2, 0, 1], [0, 2, 1, 1, 0], [0, 0, 0, 1, 3], [1, 0, 1, 2, 0], [0, 1, 3, 0, 0], [1, 0, 0, 3, 0], [1, 2, 0, 1, 0], [2, 0, 0, 0, 2], [2, 0, 1, 1, 0], [2, 1, 0, 0, 1], [0, 0, 0, 2, 2], [1, 1, 0, 0, 2], [1, 0, 1, 1, 1], [0, 3, 1, 0, 0], [0, 3, 0, 1, 0], [1, 0, 1, 0, 2], [1, 1, 1, 1, 0], [0, 3, 0, 0, 1], [0, 0, 4, 0, 0], [1, 1, 2, 0, 0], [2, 1, 0, 1, 0], [0, 0, 0, 3, 1], [0, 1, 1, 0, 2], [0, 0, 1, 2, 1], [2, 0, 1, 0, 1], [0, 0, 0, 0, 4], [0, 0, 1, 3, 0], [1, 0, 3, 0, 0], [2, 0, 0, 2, 0], [0, 2, 0, 2, 0], [1, 1, 1, 0, 1], [0, 0, 3, 1, 0], [0, 0, 2, 0, 2], [1, 0, 0, 1, 2], [0, 0, 2, 2, 0], [0, 2, 2, 0, 0], [3, 0, 0, 1, 0], [2, 1, 1, 0, 0], [0, 1, 0, 1, 2], [2, 0, 0, 1, 1], [0, 1, 2, 0, 1], [1, 2, 0, 0, 1], [0, 0, 0, 4, 0], [0, 2, 0, 0, 2], [0, 1, 1, 2, 0], [1, 0, 2, 1, 0], [0, 4, 0, 0, 0], [1, 0, 0, 2, 1], [1, 2, 1, 0, 0], [0, 0, 1, 0, 3], [2, 2, 0, 0, 0], [3, 0, 1, 0, 0], [4, 0, 0, 0, 0], [1, 1, 0, 2, 0], [3, 0, 0, 0, 1], [0, 2, 1, 0, 1], [2, 0, 2, 0, 0], [0, 0, 1, 1, 2], [0, 1, 0, 2, 1], [0, 1, 0, 0, 3], [0, 0, 0, 0, 0]];

pub fn unhash_factory(index: usize) -> [u8; NUM_TILE_COLORS] {
    INDEX_TO_FACTORY[index]
}
